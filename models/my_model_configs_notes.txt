self.hidden_size = 32
        self.hidden = None
        self.layer1 = nn.Sequential(nn.Conv1d(1, 8, kernel_size=21, stride=3),
                                    nn.BatchNorm1d(8), nn.ReLU(),
                                    nn.MaxPool1d(kernel_size=2, stride=2), nn.Dropout(0.25))
        self.layer2 = nn.Sequential(nn.Conv1d(8, 16, kernel_size=15, stride=3),
                                    nn.BatchNorm1d(16), nn.ReLU(),
                                    nn.MaxPool1d(kernel_size=2, stride=2), nn.Dropout(0.25))
        self.layer3 = nn.Sequential(nn.Conv1d(16, 32, kernel_size=9, stride=3),
                                    nn.BatchNorm1d(32), nn.ReLU(),
                                    nn.MaxPool1d(kernel_size=2, stride=2), nn.Dropout(0.5))
        self.gru = nn.GRU(input_size=32, hidden_size=self.hidden_size, num_layers=1, batch_first=True)
        self.fc = nn.Linear(self.hidden_size, 1)




self.hidden_size = 64
        self.layer1 = nn.Sequential(nn.Conv1d(1, 16, kernel_size=16, stride=10, dilation=1),
                                    nn.BatchNorm1d(16), nn.ReLU(),
                                    nn.MaxPool1d(kernel_size=8, stride=4), nn.Dropout(0.25))
        self.layer2 = nn.Sequential(nn.Conv1d(16, 32, kernel_size=8, stride=4, dilation=1),
                                    nn.BatchNorm1d(32), nn.ReLU(),
                                    nn.MaxPool1d(kernel_size=2, stride=2), nn.Dropout(0.25))
        self.gru = nn.GRU(input_size=32, hidden_size=self.hidden_size, num_layers=1, batch_first=True)
        self.fc = nn.Sequential(nn.Linear(self.hidden_size, 16), nn.ReLU(), nn.Dropout(0.5))
        self.fc2 = nn.Linear(16, 1)